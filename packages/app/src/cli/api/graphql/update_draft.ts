import {gql} from 'graphql-request'

export const ExtensionUpdateDraftMutation = gql`
  mutation ExtensionUpdateDraft(
    $apiKey: String!
    $registrationId: ID!
    $config: JSON!
    $context: String
    $handle: String
  ) {
    extensionUpdateDraft(
      input: {apiKey: $apiKey, registrationId: $registrationId, config: $config, context: $context, handle: $handle}
    ) {
      userErrors {
        field
        message
      }
    }
  }
`

export interface ExtensionUpdateDraftInput {
  apiKey: string
  config: string
  // not all extensions require configs, e.g. subscription
  context: string | undefined
  handle: string
  registrationId: string
}

// """
// Autogenerated return type of ExtensionUpdateDraft
// """
interface ExtensionUpdateDraftPayload {
  // """
  // A unique identifier for the client performing the mutation.
  // """
  clientMutationId: string
  // userErrors: [UserError]
  userErrors: {
    field: string[]
    message: string
  }[]
}

export interface ExtensionUpdateSchema {
  extensionUpdateDraft: ExtensionUpdateDraftPayload
}
